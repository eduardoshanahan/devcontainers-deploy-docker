---
- name: Clean apt cache and remove broken packages
  ansible.builtin.apt:
    autoclean: true
    autoremove: true
  become: true
  failed_when: false

# Clear apt cache completely before updating
- name: Clear apt cache completely
  ansible.builtin.command: rm -rf /var/lib/apt/lists/*
  become: true
  changed_when: false

# Remove problematic Trivy repository if it exists
- name: Remove problematic Trivy repository
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/trivy.list
    state: absent
  become: true
  failed_when: false

- name: Remove Trivy GPG key if it exists
  ansible.builtin.file:
    path: /etc/apt/keyrings/trivy.gpg
    state: absent
  become: true
  failed_when: false

- name: Update package list with retry mechanism
  ansible.builtin.apt:
    update_cache: true
  become: true
  register: apt_update_result
  retries: 3
  delay: 10
  until: apt_update_result is succeeded

# If apt update still fails, try alternative methods
- name: Try alternative apt update method
  when: apt_update_result is failed
  block:
    - name: Try apt-get update directly
      ansible.builtin.command: apt-get update
      become: true
      register: apt_get_update_result
      failed_when: false

    - name: Try with different mirrors if still failing
      when: apt_get_update_result is failed
      block:
        - name: Backup original sources.list
          ansible.builtin.copy:
            src: /etc/apt/sources.list
            dest: /etc/apt/sources.list.backup
            remote_src: true
          become: true

        - name: Try with main Ubuntu mirror
          ansible.builtin.lineinfile:
            path: /etc/apt/sources.list
            regexp: "^deb http://archive.ubuntu.com/ubuntu"
            line: "deb http://archive.ubuntu.com/ubuntu jammy main restricted universe multiverse"
            state: present
          become: true

        - name: Try apt update with main mirror
          ansible.builtin.command: apt-get update
          become: true
          register: main_mirror_update
          failed_when: false

        - name: Restore original sources.list if main mirror fails
          when: main_mirror_update is failed
          ansible.builtin.copy:
            src: /etc/apt/sources.list.backup
            dest: /etc/apt/sources.list
            remote_src: true
          become: true

- name: Check for held packages
  ansible.builtin.command: apt list --upgradable
  register: upgradable_packages
  changed_when: false
  become: true

- name: Display upgradable packages
  ansible.builtin.debug:
    msg: "{{ upgradable_packages.stdout_lines }}"

- name: Upgrade all packages with error handling
  ansible.builtin.apt:
    upgrade: full
    dpkg_options: "force-confdef,force-confold"
  become: true
  register: apt_upgrade_result
  retries: 2
  delay: 30
  until: apt_upgrade_result is succeeded

- name: Handle failed package upgrades
  when: apt_upgrade_result is failed
  block:
    - name: Try to fix broken packages
      ansible.builtin.apt:
        autoclean: true
        autoremove: true
      become: true

    - name: Attempt to configure any pending packages
      ansible.builtin.command: dpkg --configure -a
      become: true
      failed_when: false
      changed_when: false

    - name: Retry upgrade after fixing broken packages
      ansible.builtin.apt:
        upgrade: true
        dpkg_options: "force-confdef,force-confold"
      become: true

- name: Final cleanup
  ansible.builtin.apt:
    autoclean: true
    autoremove: true
  become: true

- name: Check system health after updates
  ansible.builtin.command: apt list --upgradable
  register: final_check
  changed_when: false
  become: true

- name: Display final system status
  ansible.builtin.debug:
    msg: "System update completed. Remaining upgradable packages: {{ final_check.stdout_lines | length - 1 }}"
