---
- name: Install prerequisites for Docker
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - python3-pip
    state: present
    update_cache: true
  become: true

- name: Add Docker's official GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: true

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present
  become: true

- name: Install Docker Engine and containerd
  ansible.builtin.apt:
    name: "{{ deploy_docker_packages }}"
    state: present
    update_cache: true
  become: true

- name: Ensure Docker service is started and enabled
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true
  become: true

- name: Add deployment user to the docker group
  ansible.builtin.user:
    name: "{{ containers_deployment_user }}"
    groups: docker
    append: true
  become: true

- name: Display Docker version
  ansible.builtin.command: docker --version
  register: docker_version
  changed_when: false
  become: true

- name: Debug Docker version
  ansible.builtin.debug:
    msg: "{{ docker_version.stdout }}"

- name: Check if Docker Compose is available
  ansible.builtin.command: docker compose version
  register: docker_compose_check
  changed_when: false
  failed_when: false
  become: true

- name: Display Docker Compose status and version
  ansible.builtin.debug:
    msg: >-
      Docker Compose is {{ 'available' if docker_compose_check.rc == 0 else 'not available' }}
      {{ ' - Version: ' + docker_compose_check.stdout if docker_compose_check.rc == 0 else '' }}
