---
- name: Install required packages
  ansible.builtin.apt:
    name: "{{ configure_security_updates_packages }}"
    state: present
    update_cache: true
  become: true

- name: Create security updates script directory
  ansible.builtin.file:
    path: "{{ configure_security_updates_script_dir }}"
    state: directory
    mode: "0755"
    owner: root
    group: root
  become: true

- name: Create notification script
  ansible.builtin.template:
    src: security-update-notify.sh.j2
    dest: "{{ configure_security_updates_notification_script }}"
    mode: "{{ configure_security_updates_notification_script_permissions }}"
    owner: root
    group: root
  become: true
  notify: Restart security updates service

- name: Configure unattended upgrades
  ansible.builtin.template:
    src: 20auto-upgrades.j2
    dest: /etc/apt/apt.conf.d/20auto-upgrades
    mode: "0644"
    owner: root
    group: root
  become: true
  notify: Restart unattended upgrades

- name: Configure unattended upgrades settings
  ansible.builtin.template:
    src: 50unattended-upgrades.j2
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    mode: "0644"
    owner: root
    group: root
  become: true
  notify: Restart unattended upgrades

- name: Create log file
  ansible.builtin.file:
    path: "{{ configure_security_updates_log_file }}"
    state: touch
    mode: "0644"
    owner: root
    group: root
  become: true

- name: Configure logrotate for security updates
  ansible.builtin.template:
    src: security-updates.j2
    dest: /etc/logrotate.d/security-updates
    mode: "0644"
    owner: root
    group: root
  become: true

- name: Test notification script
  ansible.builtin.command: "{{ configure_security_updates_notification_script }} 'Test Notification' 'Security updates configuration test'"
  become: true
  changed_when: false
  failed_when: false
