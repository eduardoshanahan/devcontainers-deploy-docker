#!/bin/bash

# Report Cleanup Script
# Removes old reports based on retention settings

LOG_FILE="/var/log/reporting/cleanup.log"
REPORT_DIR="{{ configure_reporting_storage_dir }}"
ARCHIVE_DIR="{{ configure_reporting_archive_dir }}"

# Retention settings
DAILY_RETENTION="{{ configure_reporting_daily_retention_days | default(7) }}"
WEEKLY_RETENTION="{{ configure_reporting_weekly_retention_days | default(30) }}"
MONTHLY_RETENTION="{{ configure_reporting_monthly_retention_days | default(90) }}"

# Function to log messages
log_message() {
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    echo "[$timestamp] $1" | tee -a "$LOG_FILE"
}

log_message "Starting report cleanup"

# Clean up daily reports
if [ -d "$REPORT_DIR/daily" ]; then
    DELETED_DAILY=$(find "$REPORT_DIR/daily" -name "*.html" -mtime +$DAILY_RETENTION -delete -print | wc -l)
    log_message "Deleted $DELETED_DAILY old daily reports"
fi

# Clean up weekly reports
if [ -d "$REPORT_DIR/weekly" ]; then
    DELETED_WEEKLY=$(find "$REPORT_DIR/weekly" -name "*.html" -mtime +$WEEKLY_RETENTION -delete -print | wc -l)
    log_message "Deleted $DELETED_WEEKLY old weekly reports"
fi

# Clean up monthly reports
if [ -d "$REPORT_DIR/monthly" ]; then
    DELETED_MONTHLY=$(find "$REPORT_DIR/monthly" -name "*.html" -mtime +$MONTHLY_RETENTION -delete -print | wc -l)
    log_message "Deleted $DELETED_MONTHLY old monthly reports"
fi

# Clean up archive directory
if [ -d "$ARCHIVE_DIR" ]; then
    DELETED_ARCHIVE=$(find "$ARCHIVE_DIR" -name "*.tar.gz" -mtime +90 -delete -print | wc -l)
    log_message "Deleted $DELETED_ARCHIVE old archived reports"
fi

# Clean up log files
find /var/log/reporting -name "*.log" -mtime +30 -delete 2>/dev/null || true

log_message "Report cleanup completed"
