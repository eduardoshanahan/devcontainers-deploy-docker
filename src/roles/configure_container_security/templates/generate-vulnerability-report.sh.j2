#!/bin/bash

# Vulnerability Report Generator
# Generates HTML reports from container security scans

REPORT_DIR="/opt/security/reports"
SCAN_DIR="/opt/security/scans"
DATE="$1"

if [ -z "$DATE" ]; then
    DATE=$(date +%Y%m%d_%H%M%S)
fi

HTML_REPORT="$REPORT_DIR/vulnerability_report_${DATE}.html"

# Generate HTML report header
cat > "$HTML_REPORT" << EOF
<!DOCTYPE html>
<html>
<head>
    <title>Container Security Vulnerability Report - $DATE</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .header { background-color: #f0f0f0; padding: 20px; border-radius: 5px; }
        .summary { background-color: #e8f4f8; padding: 15px; margin: 10px 0; border-radius: 5px; }
        .critical { color: #d32f2f; font-weight: bold; }
        .high { color: #f57c00; font-weight: bold; }
        .medium { color: #fbc02d; font-weight: bold; }
        .low { color: #388e3c; }
        .vulnerability { margin: 10px 0; padding: 10px; border-left: 4px solid #ccc; }
        .critical-vuln { border-left-color: #d32f2f; }
        .high-vuln { border-left-color: #f57c00; }
        .medium-vuln { border-left-color: #fbc02d; }
        .low-vuln { border-left-color: #388e3c; }
        table { border-collapse: collapse; width: 100%; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; }
    </style>
</head>
<body>
    <div class="header">
        <h1>Container Security Vulnerability Report</h1>
        <p>Generated on: $(date)</p>
        <p>Scan Date: $DATE</p>
    </div>
EOF

# Add summary section
if [ -f "$REPORT_DIR/scan_summary_${DATE}.json" ]; then
    SUMMARY=$(cat "$REPORT_DIR/scan_summary_${DATE}.json")
    CRITICAL=$(echo "$SUMMARY" | jq -r '.vulnerabilities.critical')
    HIGH=$(echo "$SUMMARY" | jq -r '.vulnerabilities.high')
    MEDIUM=$(echo "$SUMMARY" | jq -r '.vulnerabilities.medium')
    LOW=$(echo "$SUMMARY" | jq -r '.vulnerabilities.low')
    IMAGES_SCANNED=$(echo "$SUMMARY" | jq -r '.images_scanned')
    
    cat >> "$HTML_REPORT" << EOF
    <div class="summary">
        <h2>Scan Summary</h2>
        <table>
            <tr><th>Images Scanned</th><td>$IMAGES_SCANNED</td></tr>
            <tr><th class="critical">Critical Vulnerabilities</th><td class="critical">$CRITICAL</td></tr>
            <tr><th class="high">High Vulnerabilities</th><td class="high">$HIGH</td></tr>
            <tr><th class="medium">Medium Vulnerabilities</th><td class="medium">$MEDIUM</td></tr>
            <tr><th class="low">Low Vulnerabilities</th><td class="low">$LOW</td></tr>
        </table>
    </div>
EOF
fi

# Add detailed vulnerabilities
cat >> "$HTML_REPORT" << EOF
    <h2>Detailed Vulnerabilities</h2>
EOF

# Process each scan file
for SCAN_FILE in "$SCAN_DIR"/scan_*_"$DATE".json; do
    if [ -f "$SCAN_FILE" ]; then
        IMAGE_NAME=$(basename "$SCAN_FILE" | sed 's/scan_\(.*\)_'"$DATE"'\.json/\1/')
        
        cat >> "$HTML_REPORT" << EOF
        <h3>Image: $IMAGE_NAME</h3>
EOF
        
        # Extract vulnerabilities by severity
        jq -r '.Results[].Vulnerabilities[] | "\(.Severity)|\(.VulnerabilityID)|\(.PkgName)|\(.Description)"' "$SCAN_FILE" 2>/dev/null | while IFS='|' read -r severity vuln_id pkg_name description; do
            if [ -n "$severity" ] && [ "$severity" != "null" ]; then
                case "$severity" in
                    "CRITICAL")
                        class="critical-vuln"
                        ;;
                    "HIGH")
                        class="high-vuln"
                        ;;
                    "MEDIUM")
                        class="medium-vuln"
                        ;;
                    "LOW")
                        class="low-vuln"
                        ;;
                    *)
                        class=""
                        ;;
                esac
                
                cat >> "$HTML_REPORT" << EOF
        <div class="vulnerability $class">
            <strong>$severity</strong> - $vuln_id<br>
            Package: $pkg_name<br>
            Description: $description
        </div>
EOF
            fi
        done
    fi
done

# Close HTML
cat >> "$HTML_REPORT" << EOF
</body>
</html>
EOF

echo "Vulnerability report generated: $HTML_REPORT" 