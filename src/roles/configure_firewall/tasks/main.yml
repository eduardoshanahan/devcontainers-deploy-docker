---
- name: Install UFW
  ansible.builtin.apt:
    name: ufw
    state: present
    update_cache: true
  become: true

- name: Reset UFW to default state
  community.general.ufw:
    state: reset
  become: true

- name: Configure UFW default policies
  community.general.ufw:
    direction: "{{ item }}"
    policy: "{{ 'deny' if item == 'incoming' else 'allow' }}"
  loop:
    - incoming
    - outgoing
  become: true

- name: Allow SSH
  community.general.ufw:
    rule: allow
    port: "22"
    proto: tcp
    comment: "SSH access"
  become: true

- name: Allow HTTP and HTTPS
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
  loop:
    - 80
    - 443
  become: true

# Allow only specific Docker networks (no broad ranges)
- name: Allow specific Docker networks only
  community.general.ufw:
    rule: allow
    src: "{{ item }}"
  loop: "{{ configure_firewall_docker_networks }}"
  become: true
  when: configure_firewall_docker_networks | length > 0

# Only allow container ports if they are explicitly configured
- name: Allow specific container ports
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
  loop: "{{ configure_firewall_container_ports }}"
  become: true
  when: configure_firewall_container_ports is defined and configure_firewall_container_ports | length > 0

# Add UFW logging for network monitoring
- name: Configure UFW logging
  community.general.ufw:
    logging: "{{ configure_firewall_logging_level }}"
  become: true

- name: Enable UFW
  community.general.ufw:
    state: enabled
  become: true

- name: Wait for UFW to be fully active
  ansible.builtin.wait_for:
    timeout: 10
  become: true

- name: Verify UFW is running
  ansible.builtin.systemd:
    name: ufw
    state: started
  become: true

- name: Display UFW status
  ansible.builtin.command: ufw status verbose
  register: ufw_status
  changed_when: false
  become: true

- name: Debug UFW status
  ansible.builtin.debug:
    msg: "{{ ufw_status.stdout_lines }}"

# Add network traffic logging
- name: Create network logging directory
  ansible.builtin.file:
    path: /var/log/network
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: true

- name: Configure logrotate for network logs
  ansible.builtin.template:
    src: network_logrotate.j2
    dest: /etc/logrotate.d/network
    owner: root
    group: root
    mode: "0644"
  become: true
